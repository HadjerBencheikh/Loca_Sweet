import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      colorScheme: colorScheme,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.gray900,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(
              16,
            ),
          ),
        ),
      ),
      textTheme: TextTheme(
        bodySmall: TextStyle(
          color: appTheme.blueGray30001,
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.blueGray300,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w500,
        ),
        bodyLarge: TextStyle(
          color: colorScheme.primary,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w400,
        ),
        titleSmall: TextStyle(
          color: appTheme.blueGray800,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w600,
        ),
        labelSmall: TextStyle(
          color: appTheme.deepOrange200,
          fontSize: getFontSize(
            8,
          ),
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.blueGray800,
          fontSize: getFontSize(
            22,
          ),
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w500,
        ),
        labelLarge: TextStyle(
          color: appTheme.blueGray300,
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w600,
        ),
        headlineSmall: TextStyle(
          color: appTheme.yellow900,
          fontSize: getFontSize(
            24,
          ),
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w800,
        ),
      ),
      visualDensity: VisualDensity.standard,
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    onPrimary: Color(0X05323247),
    shadow: Color(0X05323247),
    onPrimaryContainer: Color(0X0FFFFFFF),
    onTertiary: Color(0X0FFFFFFF),
    scrim: Color(0XFF4A4A6A),
    primaryContainer: Color(0XFF4A4A6A),
    tertiaryContainer: Color(0X0FFFFFFF),
    secondaryContainer: Color(0X0FFFFFFF),
    error: Color(0X05323247),
    onErrorContainer: Color(0XFF3F1C02),
    outline: Color(0X05323247),
    onSurfaceVariant: Color(0X05323247),
    onBackground: Color(0X0FFFFFFF),
    outlineVariant: Color(0XFF4A4A6A),
    errorContainer: Color(0XFFFFB01D),
    onSurface: Color(0X0FFFFFFF),
    onError: Color(0X0FFFFFFF),
    surface: Color(0XFF4A4A6A),
    onInverseSurface: Color(0X0FFFFFFF),
    onSecondaryContainer: Color(0X05323247),
    tertiary: Color(0XFF4A4A6A),
    surfaceTint: Color(0X05323247),
    onTertiaryContainer: Color(0X05323247),
    surfaceVariant: Color(0X0FFFFFFF),
    inversePrimary: Color(0XFF4A4A6A),
    secondary: Color(0XFF4A4A6A),
    inverseSurface: Color(0X05323247),
    background: Color(0XFF4A4A6A),
    onSecondary: Color(0X0FFFFFFF),
    primary: Color(0XFFFFFFFF),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  Color get primaryVariant => Color(0XFF4A4A6A);
  Color get secondaryVariant => Color(0X0FFFFFFF);
  Color get amber300 => Color(0XFFFFC861);
  Color get amber100 => Color(0XFFFFE7BB);
  Color get gray50 => Color(0XFFF9F9F9);
  Color get blueGray300 => Color(0XFF8E8EA9);
  Color get blueGray400 => Color(0XFF8981AE);
  Color get gray60019 => Color(0X19717171);
  Color get blueGray800 => Color(0XFF32324D);
  Color get gray500 => Color(0XFF9A9896);
  Color get gray900 => Color(0XFF3F1F0D);
  Color get gray5001 => Color(0XFFFBFBFB);
  Color get deepOrange10087 => Color(0X87FFD7C0);
  Color get blueGray600 => Color(0XFF666687);
  Color get gray300 => Color(0XFFDCDCE4);
  Color get green600 => Color(0XFF34A853);
  Color get blueGray900 => Color(0XFF212134);
  Color get blueGray40002 => Color(0XFF888888);
  Color get gray400 => Color(0XFFC0C0CF);
  Color get blueGray30001 => Color(0XFFA5A5BA);
  Color get yellow900 => Color(0XFFFF7B2C);
  Color get red50 => Color(0XFFFFF2EA);
  Color get red500 => Color(0XFFEA4335);
  Color get blueGray50 => Color(0XFFEAEAEF);
  Color get gray100 => Color(0XFFF6F6F9);
  Color get gray10001 => Color(0XFFF7F7F7);
  Color get blueGray40001 => Color(0XFF8B8B8B);
  Color get gray50001 => Color(0XFF95999C);
  Color get blueA400 => Color(0XFF1877F2);
  Color get gray5002 => Color(0XFFFCFCFC);
  Color get blueGray9000f => Color(0X0F14253F);
  Color get deepPurple900 => Color(0XFF3A2D78);
  Color get deepOrange200 => Color(0XFFFFB080);
  Color get blueA200 => Color(0XFF4285F4);
  Color get gray90001 => Color(0XFF361700);
  Color get amber500 => Color(0XFFFBBC05);
  Color get black900 => Color(0XFF000000);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
